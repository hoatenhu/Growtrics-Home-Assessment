{
  "openapi": "3.1.0",
  "info": {
  "title": "Mathematics Homework Solver API",
  "description": "An AI-powered API to solve student mathematics homework problems from uploaded images or PDFs",
  "version": "1.0.0"
  },
  "paths": {
  "/": {
  "get": {
  "tags": [
  "Health"
  ],
  "summary": "Root",
  "description": "Root health check endpoint\n\nReturns a simple message to verify the API is running.",
  "operationId": "root__get",
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {}
  }
  }
  }
  }
  }
  },
  "/health": {
  "get": {
  "tags": [
  "Health"
  ],
  "summary": "Health Check",
  "description": "Detailed health check endpoint\n\nReturns more detailed health information.",
  "operationId": "health_check_health_get",
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {}
  }
  }
  }
  }
  }
  },
  "/ai-providers": {
  "get": {
  "tags": [
  "AI Providers"
  ],
  "summary": "Get Ai Providers",
  "description": "Get information about all available AI providers\n\nReturns information about all configured AI providers including:\n- Which providers are available\n- Current provider being used\n- Provider capabilities and models",
  "operationId": "get_ai_providers_ai_providers_get",
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "additionalProperties": true,
  "type": "object",
  "title": "Response Get Ai Providers Ai Providers Get"
  }
  }
  }
  }
  }
  }
  },
  "/ai-providers/current": {
  "get": {
  "tags": [
  "AI Providers"
  ],
  "summary": "Get Current Provider",
  "description": "Get information about the currently active AI provider\n\nReturns details about the provider currently being used for solving\nmathematical problems.",
  "operationId": "get_current_provider_ai_providers_current_get",
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "additionalProperties": true,
  "type": "object",
  "title": "Response Get Current Provider Ai Providers Current Get"
  }
  }
  }
  }
  }
  }
  },
  "/ai-providers/status": {
  "get": {
  "tags": [
  "AI Providers"
  ],
  "summary": "Get Providers Status",
  "description": "Get detailed status of all AI providers\n\nReturns comprehensive status information including availability,\nAPI key status, and any error messages.",
  "operationId": "get_providers_status_ai_providers_status_get",
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "additionalProperties": true,
  "type": "object",
  "title": "Response Get Providers Status Ai Providers Status Get"
  }
  }
  }
  }
  }
  }
  },
  "/homework/solve/{problem_id}": {
  "post": {
  "tags": [
  "Homework"
  ],
  "summary": "Solve Homework",
  "description": "Solve the homework problem identified by problem_id\n\nUses AI Vision to directly analyze the image and extract + solve mathematical problems,\nbypassing traditional OCR for better accuracy with complex diagrams and formulas.",
  "operationId": "solve_homework_homework_solve__problem_id__post",
  "parameters": [
  {
  "name": "problem_id",
  "in": "path",
  "required": true,
  "schema": {
  "type": "string",
  "title": "Problem Id"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Solution"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  },
  "/homework/{problem_id}": {
  "get": {
  "tags": [
  "Homework"
  ],
  "summary": "Get Homework Problem",
  "description": "Get homework problem details and solution if available\n\nReturns the complete homework problem record including upload details\nand solution if it has been solved.",
  "operationId": "get_homework_problem_homework__problem_id__get",
  "parameters": [
  {
  "name": "problem_id",
  "in": "path",
  "required": true,
  "schema": {
  "type": "string",
  "title": "Problem Id"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HomeworkProblem"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  },
  "delete": {
  "tags": [
  "Homework"
  ],
  "summary": "Delete Homework Problem",
  "description": "Delete a homework problem and its associated files\n\nRemoves the homework problem from the database and cleans up\nany associated storage files.",
  "operationId": "delete_homework_problem_homework__problem_id__delete",
  "parameters": [
  {
  "name": "problem_id",
  "in": "path",
  "required": true,
  "schema": {
  "type": "string",
  "title": "Problem Id"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {}
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  },
  "/homework": {
  "get": {
  "tags": [
  "Homework"
  ],
  "summary": "List Homework Problems",
  "description": "List recent homework problems\n\nReturns a paginated list of homework problems, most recent first.",
  "operationId": "list_homework_problems_homework_get",
  "parameters": [
  {
  "name": "limit",
  "in": "query",
  "required": false,
  "schema": {
  "type": "integer",
  "default": 10,
  "title": "Limit"
  }
  },
  {
  "name": "offset",
  "in": "query",
  "required": false,
  "schema": {
  "type": "integer",
  "default": 0,
  "title": "Offset"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/HomeworkProblem"
  },
  "title": "Response List Homework Problems Homework Get"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  },
  "/upload-homework": {
  "post": {
  "tags": [
  "Upload"
  ],
  "summary": "Upload Homework",
  "description": "Upload homework image/PDF and get the problem ID for processing\n\nAccepts PNG, JPG, JPEG, or PDF files containing mathematical problems.\nReturns a problem ID that can be used to solve the homework.",
  "operationId": "upload_homework_upload_homework_post",
  "requestBody": {
  "content": {
  "multipart/form-data": {
  "schema": {
  "$ref": "#/components/schemas/Body_upload_homework_upload_homework_post"
  }
  }
  },
  "required": true
  },
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "additionalProperties": true,
  "type": "object",
  "title": "Response Upload Homework Upload Homework Post"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  }
  },
  "components": {
  "schemas": {
  "Body_upload_homework_upload_homework_post": {
  "properties": {
  "file": {
  "type": "string",
  "format": "binary",
  "title": "File"
  }
  },
  "type": "object",
  "required": [
  "file"
  ],
  "title": "Body_upload_homework_upload_homework_post"
  },
  "ExtractedContent": {
  "properties": {
  "raw_text": {
  "type": "string",
  "title": "Raw Text"
  },
  "questions": {
  "items": {
  "$ref": "#/components/schemas/Question"
  },
  "type": "array",
  "title": "Questions"
  },
  "images_found": {
  "type": "integer",
  "title": "Images Found"
  },
  "confidence_score": {
  "type": "number",
  "title": "Confidence Score"
  }
  },
  "type": "object",
  "required": [
  "raw_text",
  "questions",
  "images_found",
  "confidence_score"
  ],
  "title": "ExtractedContent"
  },
  "HTTPValidationError": {
  "properties": {
  "detail": {
  "items": {
  "$ref": "#/components/schemas/ValidationError"
  },
  "type": "array",
  "title": "Detail"
  }
  },
  "type": "object",
  "title": "HTTPValidationError"
  },
  "HomeworkProblem": {
  "properties": {
  "id": {
  "type": "string",
  "title": "Id"
  },
  "filename": {
  "type": "string",
  "title": "Filename"
  },
  "file_path": {
  "type": "string",
  "title": "File Path"
  },
  "upload_timestamp": {
  "type": "string",
  "format": "date-time",
  "title": "Upload Timestamp"
  },
  "extracted_content": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/ExtractedContent"
  },
  {
  "type": "null"
  }
  ]
  },
  "solution": {
  "anyOf": [
  {
  "$ref": "#/components/schemas/Solution"
  },
  {
  "type": "null"
  }
  ]
  },
  "status": {
  "type": "string",
  "title": "Status",
  "default": "uploaded"
  }
  },
  "type": "object",
  "required": [
  "id",
  "filename",
  "file_path",
  "upload_timestamp"
  ],
  "title": "HomeworkProblem"
  },
  "ProblemType": {
  "type": "string",
  "enum": [
  "multiple_choice",
  "word_problem",
  "calculation",
  "geometry",
  "algebra",
  "other"
  ],
  "title": "ProblemType"
  },
  "Question": {
  "properties": {
  "question_number": {
  "type": "integer",
  "title": "Question Number"
  },
  "question_text": {
  "type": "string",
  "title": "Question Text"
  },
  "problem_type": {
  "$ref": "#/components/schemas/ProblemType"
  },
  "options": {
  "anyOf": [
  {
  "items": {
  "type": "string"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "title": "Options"
  },
  "correct_answer": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Correct Answer"
  },
  "explanation": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Explanation"
  },
  "steps": {
  "anyOf": [
  {
  "items": {
  "type": "string"
  },
  "type": "array"
  },
  {
  "type": "null"
  }
  ],
  "title": "Steps"
  }
  },
  "type": "object",
  "required": [
  "question_number",
  "question_text",
  "problem_type"
  ],
  "title": "Question"
  },
  "Solution": {
  "properties": {
  "problem_id": {
  "type": "string",
  "title": "Problem Id"
  },
  "questions_solved": {
  "items": {
  "$ref": "#/components/schemas/Question"
  },
  "type": "array",
  "title": "Questions Solved"
  },
  "overall_explanation": {
  "type": "string",
  "title": "Overall Explanation"
  },
  "total_questions": {
  "type": "integer",
  "title": "Total Questions"
  },
  "solved_at": {
  "type": "string",
  "format": "date-time",
  "title": "Solved At"
  },
  "processing_time_seconds": {
  "type": "number",
  "title": "Processing Time Seconds"
  }
  },
  "type": "object",
  "required": [
  "problem_id",
  "questions_solved",
  "overall_explanation",
  "total_questions",
  "solved_at",
  "processing_time_seconds"
  ],
  "title": "Solution"
  },
  "ValidationError": {
  "properties": {
  "loc": {
  "items": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "integer"
  }
  ]
  },
  "type": "array",
  "title": "Location"
  },
  "msg": {
  "type": "string",
  "title": "Message"
  },
  "type": {
  "type": "string",
  "title": "Error Type"
  }
  },
  "type": "object",
  "required": [
  "loc",
  "msg",
  "type"
  ],
  "title": "ValidationError"
  }
  }
  }
  }